buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
    }
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.matthewprenger.cursegradle"

version = "${minecraft_version}-${mod_version}"
group = mod_namespace // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = "${java_version}"
compileJava {
    sourceCompatibility = targetCompatibility = "${java_version}"
}

minecraft {
    version = forge_version
	if (file('../run').exists()) {
		runDir = '../run';
	} else {
		runDir = 'run';
	}
    mappings = forge_mappings
	
	replace '@VERSION', project.version
}

repositories {
    maven { // JEI
        name = "JEI repo"
        url "http://dvs1.progwml6.com/files/maven"
    }
	maven {
        name = "storagedrawers"
        url = "https://dl.bintray.com/jaquadro/dev/"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

dependencies {
    deobfCompile "com.jaquadro.minecraft.storagedrawers:StorageDrawers:${storagedrawer_version}:api"
    compile "com.jaquadro.minecraft.storagedrawers:StorageDrawers:${storagedrawer_version}"
    deobfCompile "com.jaquadro.minecraft.chameleon:Chameleon:${chameleon_version}"

    compileOnly "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

println curseforgeApi

curseforge {
  apiKey = curseforgeApi
  project {
    id = curseforgeId
    changelog = ''
    releaseType = curseforgeReleaseType
    addGameVersion '${minecraft_version}'
  }
}